/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package driver;

import domain.DaylightRecord;
import domain.PersistentObject;
import domain.util.Utilities;
import driver.util.GUIUtilities;
import java.util.List;
import javax.swing.ButtonGroup;
import jdbc.JDBCUtilities;

/**
 *
 * @author MeghaVinay
 */
public class MainFrame extends javax.swing.JFrame {

    List<DaylightRecord> dayLightRecords = null;
    PersistentObject deserializePObj = null;
    boolean isSerializePerformed = false;
    long currentTime;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        //to group the radio buttons.
        groupRadioButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        borderPanel = new javax.swing.JPanel();
        globalFunctionsPanel = new javax.swing.JPanel();
        readCsvButton = new javax.swing.JButton();
        persistanceOpsPanel = new javax.swing.JPanel();
        serializeButton = new javax.swing.JButton();
        deserializeButton = new javax.swing.JButton();
        displayTimeButton = new javax.swing.JButton();
        timeValueLabel = new javax.swing.JLabel();
        timeValue = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        executeButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        WinterSolsticeValue = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        VernalEquinoxValue = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        SummerSolsticeValue = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        AutumnalEquinoxValue = new javax.swing.JTextField();
        csvFileRadioButton = new javax.swing.JRadioButton();
        databaseRadioButton = new javax.swing.JRadioButton();
        WriteToFileButton = new javax.swing.JButton();
        OperationStatusDisplay = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        CreateRecordButton = new javax.swing.JButton();
        RetrieveAllRecordButton = new javax.swing.JButton();
        RetrieveRecordByDayButton = new javax.swing.JButton();
        RetrieveRecordByRangeButton = new javax.swing.JButton();
        UpdateRecordButton = new javax.swing.JButton();
        DeleteRecordButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        MonthForDayComboValue = new javax.swing.JComboBox();
        MonthLabel1 = new javax.swing.JLabel();
        DayLabel = new javax.swing.JLabel();
        DayInputTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        BeginDayInputTextField = new javax.swing.JTextField();
        BeginDayLabel = new javax.swing.JLabel();
        EndDayLabel = new javax.swing.JLabel();
        EndDayInputTextField = new javax.swing.JTextField();
        MonthLabel = new javax.swing.JLabel();
        MonthforRangeComboValue = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        DayLabel1 = new javax.swing.JLabel();
        DeleteDayInputTextField = new javax.swing.JTextField();
        MonthLabel2 = new javax.swing.JLabel();
        DeleteMonthForDayComboValue = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        RecordDisplayTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        OperationStatusDisplayValue = new javax.swing.JLabel();
        RefreshDatabase = new javax.swing.JButton();
        RefreshTextFields = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ITM 411- Final Project");

        borderPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        borderPanel.setPreferredSize(new java.awt.Dimension(950, 620));

        globalFunctionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Global Functions", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        readCsvButton.setText("Read CSV");
        readCsvButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readCsvButtonActionPerformed(evt);
            }
        });

        persistanceOpsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Persistance Ops", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        serializeButton.setText("Serialize");
        serializeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serializeButtonActionPerformed(evt);
            }
        });

        deserializeButton.setText("Deserialize");
        deserializeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deserializeButtonActionPerformed(evt);
            }
        });

        displayTimeButton.setText("Display Delta Time");
        displayTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayTimeButtonActionPerformed(evt);
            }
        });

        timeValueLabel.setText("Delta Time : ");

        javax.swing.GroupLayout persistanceOpsPanelLayout = new javax.swing.GroupLayout(persistanceOpsPanel);
        persistanceOpsPanel.setLayout(persistanceOpsPanelLayout);
        persistanceOpsPanelLayout.setHorizontalGroup(
            persistanceOpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(persistanceOpsPanelLayout.createSequentialGroup()
                .addGroup(persistanceOpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(persistanceOpsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(timeValueLabel)
                        .addGap(14, 14, 14)
                        .addComponent(timeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(persistanceOpsPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(persistanceOpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deserializeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serializeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displayTimeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        persistanceOpsPanelLayout.setVerticalGroup(
            persistanceOpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(persistanceOpsPanelLayout.createSequentialGroup()
                .addComponent(serializeButton)
                .addGap(18, 18, 18)
                .addComponent(deserializeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(displayTimeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(persistanceOpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeValueLabel)
                    .addComponent(timeValue))
                .addGap(5, 5, 5))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Analytics", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        executeButton.setText("Execute");
        executeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Winter Solstice:");

        WinterSolsticeValue.setEditable(false);
        WinterSolsticeValue.setText("Winter Solstice?");

        jLabel3.setText("Vernal Equinox :");

        VernalEquinoxValue.setEditable(false);
        VernalEquinoxValue.setText("Vernal Equinox?");

        jLabel4.setText("Summer Solstice:");

        SummerSolsticeValue.setEditable(false);
        SummerSolsticeValue.setText("Summer Solstice?");

        jLabel5.setText("Autumnal Equinox :");

        AutumnalEquinoxValue.setEditable(false);
        AutumnalEquinoxValue.setText("Autumnal Equinox");
        AutumnalEquinoxValue.setToolTipText("");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VernalEquinoxValue)
                            .addComponent(WinterSolsticeValue)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SummerSolsticeValue)
                            .addComponent(AutumnalEquinoxValue))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WinterSolsticeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VernalEquinoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SummerSolsticeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AutumnalEquinoxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        csvFileRadioButton.setSelected(true);
        csvFileRadioButton.setText("Data from CSV file");

        databaseRadioButton.setText("Data from database");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(csvFileRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(databaseRadioButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(executeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(executeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(databaseRadioButton)
                    .addComponent(csvFileRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        WriteToFileButton.setText("Write Data To File");
        WriteToFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WriteToFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout globalFunctionsPanelLayout = new javax.swing.GroupLayout(globalFunctionsPanel);
        globalFunctionsPanel.setLayout(globalFunctionsPanelLayout);
        globalFunctionsPanelLayout.setHorizontalGroup(
            globalFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(globalFunctionsPanelLayout.createSequentialGroup()
                .addGroup(globalFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(persistanceOpsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(globalFunctionsPanelLayout.createSequentialGroup()
                        .addGroup(globalFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(globalFunctionsPanelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(globalFunctionsPanelLayout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(readCsvButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(globalFunctionsPanelLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(WriteToFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        globalFunctionsPanelLayout.setVerticalGroup(
            globalFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(globalFunctionsPanelLayout.createSequentialGroup()
                .addComponent(readCsvButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(persistanceOpsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(WriteToFileButton)
                .addGap(228, 228, 228))
        );

        OperationStatusDisplay.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        OperationStatusDisplay.setText("Status : ");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CRUD Operations", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel2.setPreferredSize(new java.awt.Dimension(1000, 640));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        CreateRecordButton.setText("Create");
        CreateRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateRecordButtonActionPerformed(evt);
            }
        });

        RetrieveAllRecordButton.setText("Retrieve All");
        RetrieveAllRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RetrieveAllRecordButtonActionPerformed(evt);
            }
        });

        RetrieveRecordByDayButton.setText("Retrieve By Day");
        RetrieveRecordByDayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RetrieveRecordByDayButtonActionPerformed(evt);
            }
        });

        RetrieveRecordByRangeButton.setText("Retrieve By Range");
        RetrieveRecordByRangeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RetrieveRecordByRangeButtonActionPerformed(evt);
            }
        });

        UpdateRecordButton.setText("Update");
        UpdateRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateRecordButtonActionPerformed(evt);
            }
        });

        DeleteRecordButton.setText("Delete");
        DeleteRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRecordButtonActionPerformed(evt);
            }
        });

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel6.setText("(Optional)");

        MonthForDayComboValue.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        MonthLabel1.setText("Month :");

        DayLabel.setText("Day :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(DayLabel)
                        .addGap(0, 19, Short.MAX_VALUE))
                    .addComponent(MonthLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6))
                    .addComponent(DayInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MonthForDayComboValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DayInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MonthLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MonthForDayComboValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        BeginDayInputTextField.setColumns(2);

        BeginDayLabel.setText("Begin Day: ");

        EndDayLabel.setText("End Day  :");

        MonthLabel.setText("Month   :");

        MonthforRangeComboValue.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel2.setText("(Optional)");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(MonthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel2))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(MonthforRangeComboValue, 0, 93, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BeginDayLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EndDayLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BeginDayInputTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                            .addComponent(EndDayInputTextField))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 7, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BeginDayInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BeginDayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EndDayInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EndDayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MonthforRangeComboValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MonthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2))
        );

        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        DayLabel1.setText("Day :");

        MonthLabel2.setText("Month :");

        DeleteMonthForDayComboValue.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(DayLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DeleteDayInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(MonthLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DeleteMonthForDayComboValue, 0, 104, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DayLabel1)
                    .addComponent(DeleteDayInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MonthLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteMonthForDayComboValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CreateRecordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RetrieveAllRecordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RetrieveRecordByDayButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RetrieveRecordByRangeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(UpdateRecordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DeleteRecordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 18, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateRecordButton)
                .addGap(18, 18, 18)
                .addComponent(RetrieveAllRecordButton)
                .addGap(18, 18, 18)
                .addComponent(RetrieveRecordByDayButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(RetrieveRecordByRangeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(UpdateRecordButton)
                .addGap(18, 18, 18)
                .addComponent(DeleteRecordButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        RecordDisplayTable.setBackground(new java.awt.Color(204, 204, 204));
        RecordDisplayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Day", "Month", "Sun Rise Time", "Sun Set Time"
            }
        ));
        jScrollPane1.setViewportView(RecordDisplayTable);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Rise and Set for the Sun for 2013");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        OperationStatusDisplayValue.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        OperationStatusDisplayValue.setForeground(new java.awt.Color(0, 0, 153));
        OperationStatusDisplayValue.setText("No Action Performed");

        RefreshDatabase.setText("Reload Database");
        RefreshDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshDatabaseActionPerformed(evt);
            }
        });

        RefreshTextFields.setText("Reset All Input Fields");
        RefreshTextFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshTextFieldsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout borderPanelLayout = new javax.swing.GroupLayout(borderPanel);
        borderPanel.setLayout(borderPanelLayout);
        borderPanelLayout.setHorizontalGroup(
            borderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borderPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(OperationStatusDisplay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OperationStatusDisplayValue, javax.swing.GroupLayout.PREFERRED_SIZE, 966, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(borderPanelLayout.createSequentialGroup()
                .addGroup(borderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(borderPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(RefreshTextFields)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RefreshDatabase))
                    .addComponent(globalFunctionsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE)
                .addContainerGap())
        );
        borderPanelLayout.setVerticalGroup(
            borderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borderPanelLayout.createSequentialGroup()
                .addGroup(borderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(borderPanelLayout.createSequentialGroup()
                        .addComponent(globalFunctionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(borderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RefreshDatabase)
                            .addComponent(RefreshTextFields))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(borderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OperationStatusDisplay)
                    .addComponent(OperationStatusDisplayValue))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(borderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1097, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(borderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //to group radio buttons into a single group.
    private void groupRadioButton() {
        ButtonGroup bg = new ButtonGroup();
        //group the radio buttons into a single group.
        bg.add(csvFileRadioButton);
        bg.add(databaseRadioButton);
    }

    //Event invoked when write to file button is pressed.
    //This is to write all displayed data to a text file called daylight-records.txt.
    private void WriteToFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WriteToFileButtonActionPerformed
       GUIUtilities.writeDataToFile(OperationStatusDisplayValue, dayLightRecords);
    }//GEN-LAST:event_WriteToFileButtonActionPerformed

    //Event triggered when read CSV file button is pressed.
    //This will read the csv file data from filesystem and store into array of daylight records.
    private void readCsvButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readCsvButtonActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        dayLightRecords = Utilities.readCSVfile();
        //display success or failure message.
        if (dayLightRecords.isEmpty()) {
            OperationStatusDisplayValue.setText("Read CSV file failed.");
        } else {
            OperationStatusDisplayValue.setText("Read CSV file success.");
        }
    }//GEN-LAST:event_readCsvButtonActionPerformed

    ////Serialize persistentobject pObj as a aggregate...
    private void serializeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serializeButtonActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        //check if daylight records present then perform the appropriate task.
        if (dayLightRecords != null) {
            //funtion to serialize and display the message on GUI is invoked.
            boolean result = GUIUtilities.serializeandDisplaytheStatusOnGUI(dayLightRecords, OperationStatusDisplayValue);
            if (result) {
                isSerializePerformed = true;
            }
        } else {
            OperationStatusDisplayValue.setText("Please read CSV file then try serialize and deserialize process.");
        }
    }//GEN-LAST:event_serializeButtonActionPerformed

    // Deserialize records back into app...
    private void deserializeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deserializeButtonActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        //check first if serialization is performed then do appropriate task.
        if (isSerializePerformed) {
            //deserialized the object.
            deserializePObj = new PersistentObject();
            deserializePObj = Utilities.deserializeListObject();
            if (deserializePObj.getDateObj() != null && deserializePObj.getDayLightRecord() != null) {
                //get current time
                currentTime = System.currentTimeMillis();
                //write deserialized data to file in filesystem.
                boolean result = GUIUtilities.writeDeserializedDatatofile(deserializePObj, OperationStatusDisplayValue);
                if (result) {
                    OperationStatusDisplayValue.setText("Deserialization successful.");
                } else {
                    OperationStatusDisplayValue.setText("Deserialization failed while writing data to file.");
                }
                // isSerializePerformed = false;
            } else {
                //if deserialization failes display appropriate message.
                OperationStatusDisplayValue.setText("Deserialization failed.");
            }
        } else {
            OperationStatusDisplayValue.setText("Deserialization failed. Make sure you have performed serialization.");
        }
    }//GEN-LAST:event_deserializeButtonActionPerformed

    //This event is triggered when execute button is pressed from GUI. This is to perform Data analytics ie..
    //Compute Shortest day => winter solstice 
    //Equal day and night => vernal equinox (Spring)
    //Longest day => summer solstice
    //compute Equal day and night => autumnal equinox(Fall)
    private void executeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeButtonActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        //check radio button to get daylight records from either csv file or database to perform
        //data analytics on those data.
        if (csvFileRadioButton.isSelected()) {
            if (dayLightRecords != null) {
                //function which computes data analytics and displays result is invoked.
                GUIUtilities.computeDataAnalytics(dayLightRecords, WinterSolsticeValue, VernalEquinoxValue, SummerSolsticeValue, AutumnalEquinoxValue, OperationStatusDisplayValue);
            } else {
                //Any error then display appropriate message
                OperationStatusDisplayValue.setText("Please read data from csv file. Then execute the data analytics operations.");
            }
        } else if (databaseRadioButton.isSelected()) {
            List<DaylightRecord> record = Utilities.databaseDataRecords();
            if (record != null) {
                if (record.size() > 0) {
                    //function which computes data analytics and displays result is invoked.
                    GUIUtilities.computeDataAnalytics(record, WinterSolsticeValue, VernalEquinoxValue, SummerSolsticeValue, AutumnalEquinoxValue, OperationStatusDisplayValue);
                } else {
                    OperationStatusDisplayValue.setText("No data present in database to perform data analytics.");
                }
            } else {
                OperationStatusDisplayValue.setText("Error while connecting to database to retrieve records. Please check the MySQL server connection.");
            }
        }
    }//GEN-LAST:event_executeButtonActionPerformed

    //This event is triggered when create button pressed.This is to create an daylight record into database.
    private void CreateRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateRecordButtonActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        //Funtion which accepts the input from user , validates it and then inserts data is performed.
        GUIUtilities.createRecordJFrame(this, OperationStatusDisplayValue);
    }//GEN-LAST:event_CreateRecordButtonActionPerformed

    //This event is triggered when Retrieve all button is pressed.This is to retrieve all the 
    //daylight record present in the database and displays on JTable.
    private void RetrieveAllRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RetrieveAllRecordButtonActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        //function which retrieves all daylight records and displays on jtable.
        GUIUtilities.retrieveAllDatabaseRecords(RecordDisplayTable, OperationStatusDisplayValue);
    }//GEN-LAST:event_RetrieveAllRecordButtonActionPerformed

    //This event is triggered when Retrieve By day button is pressed.This is to retrieve a particular
    //daylight record present in the database and displays on JTable. It reads the day and month value input by the user.
    private void RetrieveRecordByDayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RetrieveRecordByDayButtonActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        GUIUtilities.retrieveRecordByDay(DayInputTextField.getText(), MonthForDayComboValue.getSelectedItem().toString(), RecordDisplayTable, OperationStatusDisplayValue);
    }//GEN-LAST:event_RetrieveRecordByDayButtonActionPerformed

    //This event is triggered when Retrieve By Range button is pressed.This is to retrieve a particular
    //daylight record present between two day ranges in the database and displays on JTable. 
    //It reads the day and month value input by the user.
    private void RetrieveRecordByRangeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RetrieveRecordByRangeButtonActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        GUIUtilities.retrieveRecordByDayRange(BeginDayInputTextField.getText(), EndDayInputTextField.getText(), MonthforRangeComboValue.getSelectedItem().toString(), RecordDisplayTable, OperationStatusDisplayValue);
    }//GEN-LAST:event_RetrieveRecordByRangeButtonActionPerformed

    //This event is triggered when update button pressed.This is to update an daylight record present in database.
    private void UpdateRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateRecordButtonActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        //Funtion which accepts the input from user , validates it and then update data is performed.
        GUIUtilities.updateRecordJFrame(this, OperationStatusDisplayValue);
    }//GEN-LAST:event_UpdateRecordButtonActionPerformed

    //This event is triggered when delete button is pressed from GUI.
    //The day and month value input from user is read and particular record(s)  is deleted.
    private void DeleteRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRecordButtonActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        if (!DeleteDayInputTextField.getText().equals("") || !DeleteMonthForDayComboValue.getSelectedItem().equals("None")) {
            String result = JDBCUtilities.deleteRecord(DeleteDayInputTextField.getText(), DeleteMonthForDayComboValue.getSelectedItem().toString());
            OperationStatusDisplayValue.setText(result);
        } else {
            OperationStatusDisplayValue.setText("Please enter day or month value to delete record from database");
        }
    }//GEN-LAST:event_DeleteRecordButtonActionPerformed

    //This event is triggred when didplay delta time is pressed.
    //displays the time difference between serialization and deserialization.
    private void displayTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayTimeButtonActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        GUIUtilities.timeDiffSerandDeser(deserializePObj, OperationStatusDisplayValue, timeValue, currentTime);
    }//GEN-LAST:event_displayTimeButtonActionPerformed

    //This event is triggered when Refresh database button is pressed.
    private void RefreshDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshDatabaseActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        //Reload database with read CSV file after performing any insertion and deletion to start over with
        //original database value.
        List<DaylightRecord> dlr = Utilities.readCSVfile();
        boolean value = JDBCUtilities.initByCreatingandPopulatingTableInDatabase(dlr);
        if (value) {
            OperationStatusDisplayValue.setText("Successfully reloaded the database using data from CSV file ");
        } else {
            OperationStatusDisplayValue.setText("Database reload failed.Check MySQL server connection.");
        }
    }//GEN-LAST:event_RefreshDatabaseActionPerformed

    //This event is triggered when Refresh All Text field button is pressed.
    private void RefreshTextFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshTextFieldsActionPerformed
        OperationStatusDisplayValue.setText("Processing.....");
        //This to reset all text fields after user entering the input data.
        GUIUtilities.refreshTextFields(WinterSolsticeValue, SummerSolsticeValue, VernalEquinoxValue, AutumnalEquinoxValue, DayInputTextField, DeleteDayInputTextField, BeginDayInputTextField, EndDayInputTextField, MonthForDayComboValue, MonthforRangeComboValue, DeleteMonthForDayComboValue);
        OperationStatusDisplayValue.setText("Refreshed Input Text Fields Succesful.");
    }//GEN-LAST:event_RefreshTextFieldsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                //create database table and insert all daylight records into database. 
                List<DaylightRecord> dlr = Utilities.readCSVfile();
                boolean value = JDBCUtilities.initByCreatingandPopulatingTableInDatabase(dlr);
                //if insert successful or failure then start the mainframe with appropriate message in it.
                if (value) {
                    new MainFrame().setVisible(true);
                    GUIUtilities.retrieveAllDatabaseRecords(RecordDisplayTable, OperationStatusDisplayValue);
                    OperationStatusDisplayValue.setText("Database table daylightrecord created and records inserted successfully.");
                } else {
                    new MainFrame().setVisible(true);
                    OperationStatusDisplayValue.setText("Database table daylightrecord not created. Please check the MySQL server connection");
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AutumnalEquinoxValue;
    private javax.swing.JTextField BeginDayInputTextField;
    private javax.swing.JLabel BeginDayLabel;
    private javax.swing.JButton CreateRecordButton;
    private javax.swing.JTextField DayInputTextField;
    private javax.swing.JLabel DayLabel;
    private javax.swing.JLabel DayLabel1;
    private javax.swing.JTextField DeleteDayInputTextField;
    private javax.swing.JComboBox DeleteMonthForDayComboValue;
    private javax.swing.JButton DeleteRecordButton;
    private javax.swing.JTextField EndDayInputTextField;
    private javax.swing.JLabel EndDayLabel;
    private javax.swing.JComboBox MonthForDayComboValue;
    private javax.swing.JLabel MonthLabel;
    private javax.swing.JLabel MonthLabel1;
    private javax.swing.JLabel MonthLabel2;
    private javax.swing.JComboBox MonthforRangeComboValue;
    private javax.swing.JLabel OperationStatusDisplay;
    private static javax.swing.JLabel OperationStatusDisplayValue;
    private static javax.swing.JTable RecordDisplayTable;
    private javax.swing.JButton RefreshDatabase;
    private javax.swing.JButton RefreshTextFields;
    private javax.swing.JButton RetrieveAllRecordButton;
    private javax.swing.JButton RetrieveRecordByDayButton;
    private javax.swing.JButton RetrieveRecordByRangeButton;
    private javax.swing.JTextField SummerSolsticeValue;
    private javax.swing.JButton UpdateRecordButton;
    private javax.swing.JTextField VernalEquinoxValue;
    private javax.swing.JTextField WinterSolsticeValue;
    private javax.swing.JButton WriteToFileButton;
    private javax.swing.JPanel borderPanel;
    private javax.swing.JRadioButton csvFileRadioButton;
    private javax.swing.JRadioButton databaseRadioButton;
    private javax.swing.JButton deserializeButton;
    private javax.swing.JButton displayTimeButton;
    private javax.swing.JButton executeButton;
    private javax.swing.JPanel globalFunctionsPanel;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel persistanceOpsPanel;
    private javax.swing.JButton readCsvButton;
    private javax.swing.JButton serializeButton;
    private javax.swing.JLabel timeValue;
    private javax.swing.JLabel timeValueLabel;
    // End of variables declaration//GEN-END:variables
}
